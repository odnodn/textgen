package SingleTravelWizard{

    enum CoverageLevel {
        ONE_K
        TWO_K
        THREE_K
    }

    enum PlanType  {
        SINGLE
        MULTI
    }

    enum WhosTravelling  {
        SINGLE
        FAMILY
    }


    enum Gender  {
        MALE
        FEMALE
        TRANSGENDER
    }

    enum Relation{
        SPOUSE
        DEPENDANT
    }

    entity GettingStarted{
        haveCare: bool
        alreadyDeparted: bool requiredFalse
        over60: bool requiredFalse
    }

    entity WhenTravelling{
         departure: date future
         returnDate: date future
    }

    entity WhoTravelling{
        whosTraveling : WhosTravelling
        dobOldest: date

        planMember: bool
        groupNumber: int opt min:1000 max:9999
        idNumber: string opt
    }

    entity ChoosePlan{
        planType : PlanType
    }

    entity CoverageOptions{
        coverageLevel: CoverageLevel renderDropdown
    }

    entity Medical{
        travellingForMedical: bool requiredFalse
    }

    entity MustBeStable{
        ninetyDayStable: bool
     }

     entity Travelers{
        firstName:string opt min:2
        lastName:string pattern:'^[\w\s-]+$'
        gender: Gender renderDropdown
        dob: date
     }

     entity ContactInfo{
      street: string
      city: string
      postalCode: string pattern:'/^[A-Za-z]\d[A-Za-z][ -]?\d[A-Za-z]\d$/'
      phone: string
      email: string
      confirmEmail: string
     }

     entity PaymentInfo{
       number: string
       cvv: int min:100 max:999
       name: string
       expiry: string
     }

}


